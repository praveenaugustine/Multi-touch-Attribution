shiny::runApp('D:/i2Decisions/17. Multi-touch attribution/Tutorial')
library(shiny)
```{r}
install.packages("shiny")
```
install.packages("shiny")
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads/code')
shinyApp(ui = ui, server = server)
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads/code')
getwd()
setwd("D:\i2Decisions\17. Multi-touch attribution\2. Codes\shiny-quickstart-1\downloads\code")
setwd("D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads/code")
getwd()
library(shiny)
runApp("my_app")
install.packages("shiny")
install.packages("shiny")
library(shiny)
runApp("my_app")
runApp("my_app")
runApp("app")
runApp("code")
runApp("code")
runApp("downloads")
list.files(path = "D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads/code")
basename(getwd())
dirname(getwd())
runApp("D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads")
runApp("D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads")
runApp("D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads")
runApp("code")
runApp("downloads")
runApp("D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads" display.mode = "showcase")
runApp("D:/i2Decisions/17. Multi-touch attribution/2. Codes/shiny-quickstart-1/downloads", display.mode = "showcase")
install.packages("shiny")
install.packages("shiny")
library("shiny")
shinyUI(fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel( "sidebar panel"),
mainPanel("main panel")
)
))
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Tutorials')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shinydashboard")
shiny::runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
install.packages("data.table")
library(data.table)
summary(iris)
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
tableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderTable(iris)
}
)
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
dataTableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderDataTable(iris)
}
)
## Only run this example in interactive R sessions
# DataTables example
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
dataTableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderDataTable(iris)
}
)
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
# Load the ggplot2 package which provides
# the 'mpg' dataset.
library(ggplot2)
fluidPage(
titlePanel("Basic DataTable"),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("man",
"Manufacturer:",
c("All",
unique(as.character(mpg$manufacturer))))
),
column(4,
selectInput("trans",
"Transmission:",
c("All",
unique(as.character(mpg$trans))))
),
column(4,
selectInput("cyl",
"Cylinders:",
c("All",
unique(as.character(mpg$cyl))))
)
),
# Create a new row for the table.
fluidRow(
DT::dataTableOutput("table")
)
)
fluidPage(
titlePanel("Basic DataTable"),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("man",
"Manufacturer:",
c("All",
unique(as.character(mpg$manufacturer))))
),
column(4,
selectInput("trans",
"Transmission:",
c("All",
unique(as.character(mpg$trans))))
),
column(4,
selectInput("cyl",
"Cylinders:",
c("All",
unique(as.character(mpg$cyl))))
)
),
# Create a new row for the table.
fluidRow(
DT::dataTableOutput("table")
)
)
install.packages("ggplot2")
library(ggplot2)
fluidPage(
titlePanel("Basic DataTable"),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("man",
"Manufacturer:",
c("All",
unique(as.character(mpg$manufacturer))))
),
column(4,
selectInput("trans",
"Transmission:",
c("All",
unique(as.character(mpg$trans))))
),
column(4,
selectInput("cyl",
"Cylinders:",
c("All",
unique(as.character(mpg$cyl))))
)
),
# Create a new row for the table.
fluidRow(
DT::dataTableOutput("table")
)
)
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
runApp('D:/i2Decisions/17. Multi-touch attribution/2. Codes/Multi-touch-Attribution')
install.packages("shinythemes")
shiny::runApp()
install.packages("shinythemes")
shiny::runApp()
install.packages("shinythemes")
shiny::runApp()
